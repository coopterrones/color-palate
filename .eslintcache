[{"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/index.js":"1","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/App/index.js":"2","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/apiCalls.js":"3","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/ColorCard/index.js":"4","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/CardController/index.js":"5","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/RandomizerButton/index.js":"6","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/AddMyOwnMyColors/index.js":"7"},{"size":239,"mtime":1610569110507,"results":"8","hashOfConfig":"9"},{"size":2776,"mtime":1610821221366,"results":"10","hashOfConfig":"9"},{"size":1060,"mtime":1610820534749,"results":"11","hashOfConfig":"9"},{"size":1027,"mtime":1610820534747,"results":"12","hashOfConfig":"9"},{"size":1013,"mtime":1610820534744,"results":"13","hashOfConfig":"9"},{"size":293,"mtime":1610820534748,"results":"14","hashOfConfig":"9"},{"size":281,"mtime":1610821264722,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ln82ec",{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/index.js",[],["34","35"],"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/App/index.js",["36","37","38","39","40"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport { apiCalls } from \"../../apiCalls\";\nimport CardController from \"../CardController\";\nimport { Route } from \"react-router-dom\";\nimport RandomizerButton from \"../RandomizerButton\";\nimport AddMyOwnColors from \"../AddMyOwnMyColors/index.js\";\n\nconst App = () => {\n  const [rgbValues, setRgbValues] = useState(null);\n  const [hexCodes, setHexCodes] = useState(null);\n  const [colorInputs, setColorInputs] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const getColors = () => {\n    apiCalls\n      .getRandomPalette()\n      .then((data) => {\n        setRgbValues(data);\n        rgbToHex(data);\n      })\n      .catch((err) => setError(err.message));\n  };\n\n  const getColorsWithInput = (input) => {\n    // FORMAT FOR COLORS WHEN CHOSING OWN -- xlet input = [\n    //   [44, 43, 44],\n    //   [90, 83, 82],\n    // ];\n    let colors = [...input, \"N\", \"N\", \"N\"];\n    apiCalls.getRandomPaletteFromInput(colors).then((data) => {\n      setRgbValues(data);\n      rgbToHex(data);\n    });\n  };\n\n  function componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n  }\n\n  const rgbToHex = (data) => {\n    const hexCodes = data.map((color) => {\n      const r = color[0];\n      const g = color[1];\n      const b = color[2];\n\n      return `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`;\n    });\n    setHexCodes(hexCodes);\n  };\n\n  const toggleColorInputs = () => {\n    setColorInputs(!colorInputs);\n  };\n\n  const randomizePalette = () => {\n    getColors();\n  };\n\n  const randomizePaletteWithInput = () => {\n    //input should be rgb values or hexcode ...\n    //use rgb to hex func. to conver input if the input is from the user input\n    //use a helper of getColorsFromInput\n  };\n\n  const lockCard = () => {\n    //needs to give a class to the ColorCard component to display locked icon\n    //need to create a string for the input that it is locking using the rgb val\n    //needs to utilize the get random with input...\n    //TODO come back to this ... create get random with input string first\n  };\n\n  useEffect(() => getColors(), []);\n\n  return (\n    <main className=\"App\">\n      <h1>Dream Themes</h1>\n      {rgbValues && hexCodes && (\n        <CardController\n          style={{}}\n          rgb={rgbValues}\n          hexCodes={hexCodes}\n          lockCard={lockCard}\n          colorInputs={colorInputs}\n        />\n      )}\n      {rgbValues && hexCodes && (\n        <RandomizerButton\n          randomizePalette={randomizePalette}\n          randomizeWithInput={getColorsWithInput}\n        />\n      )}\n      {rgbValues && hexCodes && (\n        <AddMyOwnColors toggleColorInputs={toggleColorInputs} />\n      )}\n    </main>\n  );\n};\n\nexport default App;\n","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/apiCalls.js",[],"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/ColorCard/index.js",["41","42"],"import React, { useState } from \"react\";\nimport \"./ColorCard.scss\";\n\nconst ColorCard = ({ color, hexCode }) => {\n  const [rgbVal, setRgbVal] = useState(\n    `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n  );\n  const [hex, setHexCode] = useState(hexCode);\n\n  return (\n    <section className=\"card-wrapper\">\n      <div\n        className=\"color-window\"\n        style={{\n          backgroundColor: hexCode,\n        }}\n      ></div>\n      <p className=\"rgb-value\">{`${color[0]}, ${color[1]}, ${color[2]}`}</p>\n      <p className=\"hex-code-value\">{hex}</p>\n    </section>\n  );\n};\n\nexport default ColorCard;\n","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/CardController/index.js",["43"],"import React, { useState } from \"react\";\nimport ColorCard from \"../ColorCard/index.js\";\nimport \"./CardController.scss\";\n\nconst CardController = ({ rgb, hexCodes }) => {\n  return (\n    <section className=\"card-controller-wrapper\">\n      <ColorCard color={rgb[0]} hexCode={hexCodes[0]} />\n      <ColorCard color={rgb[1]} hexCode={hexCodes[1]} />\n      <ColorCard color={rgb[2]} hexCode={hexCodes[2]} />\n      <ColorCard color={rgb[3]} hexCode={hexCodes[3]} />\n      <ColorCard color={rgb[4]} hexCode={hexCodes[4]} />\n    </section>\n  );\n};\n\nexport default CardController;\n","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/RandomizerButton/index.js",[],"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/AddMyOwnMyColors/index.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":5,"column":10,"nodeType":"50","messageId":"51","endLine":5,"endColumn":15},{"ruleId":"48","severity":1,"message":"52","line":13,"column":10,"nodeType":"50","messageId":"51","endLine":13,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":39,"column":23,"nodeType":"55","messageId":"56","endLine":39,"endColumn":25},{"ruleId":"48","severity":1,"message":"57","line":61,"column":9,"nodeType":"50","messageId":"51","endLine":61,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":74,"column":32,"nodeType":"60","endLine":74,"endColumn":34,"suggestions":"61"},{"ruleId":"48","severity":1,"message":"62","line":5,"column":10,"nodeType":"50","messageId":"51","endLine":5,"endColumn":16},{"ruleId":"48","severity":1,"message":"63","line":5,"column":18,"nodeType":"50","messageId":"51","endLine":5,"endColumn":27},{"ruleId":"48","severity":1,"message":"64","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'randomizePaletteWithInput' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getColors'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'rgbVal' is assigned a value but never used.","'setRgbVal' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [getColors]",{"range":"70","text":"71"},[2158,2160],"[getColors]"]