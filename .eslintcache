[{"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/index.js":"1","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/App/index.js":"2","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/apiCalls.js":"3","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/ColorCard/index.js":"4","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/CardController/index.js":"5","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/RandomizerButton/index.js":"6","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/AddMyOwnMyColors/index.js":"7"},{"size":239,"mtime":1610569110507,"results":"8","hashOfConfig":"9"},{"size":2776,"mtime":1610765862623,"results":"10","hashOfConfig":"9"},{"size":1060,"mtime":1610735159261,"results":"11","hashOfConfig":"9"},{"size":1027,"mtime":1610780841752,"results":"12","hashOfConfig":"9"},{"size":1013,"mtime":1610765817795,"results":"13","hashOfConfig":"9"},{"size":293,"mtime":1610737023326,"results":"14","hashOfConfig":"9"},{"size":281,"mtime":1610765572712,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ln82ec",{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/index.js",[],["33","34"],"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/App/index.js",["35","36","37","38","39"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport { apiCalls } from \"../../apiCalls\";\nimport CardController from \"../CardController\";\nimport { Route } from \"react-router-dom\";\nimport RandomizerButton from \"../RandomizerButton\";\nimport AddMyOwnColors from \"../AddMyOwnMyColors/index.js\";\n\nconst App = () => {\n  const [rgbValues, setRgbValues] = useState(null);\n  const [hexCodes, setHexCodes] = useState(null);\n  const [colorInputs, setColorInputs] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const getColors = () => {\n    apiCalls\n      .getRandomPalette()\n      .then((data) => {\n        setRgbValues(data);\n        rgbToHex(data);\n      })\n      .catch((err) => setError(err.message));\n  };\n\n  const getColorsWithInput = (input) => {\n    // FORMAT FOR COLORS WHEN CHOSING OWN -- xlet input = [\n    //   [44, 43, 44],\n    //   [90, 83, 82],\n    // ];\n    let colors = [...input, \"N\", \"N\", \"N\"];\n    apiCalls.getRandomPaletteFromInput(colors).then((data) => {\n      setRgbValues(data);\n      rgbToHex(data);\n    });\n  };\n\n  function componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n  }\n\n  const rgbToHex = (data) => {\n    const hexCodes = data.map((color) => {\n      const r = color[0];\n      const g = color[1];\n      const b = color[2];\n\n      return `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`;\n    });\n    setHexCodes(hexCodes);\n  };\n\n  const handleColorInputs = () => {\n    setColorInputs(!colorInputs);\n  };\n\n  const randomizePalette = () => {\n    getColors();\n  };\n\n  const randomizePaletteWithInput = () => {\n    //input should be rgb values or hexcode ...\n    //use rgb to hex func. to conver input if the input is from the user input\n    //use a helper of getColorsFromInput\n  };\n\n  const lockCard = () => {\n    //needs to give a class to the ColorCard component to display locked icon\n    //need to create a string for the input that it is locking using the rgb val\n    //needs to utilize the get random with input...\n    //TODO come back to this ... create get random with input string first\n  };\n\n  useEffect(() => getColors(), []);\n\n  return (\n    <main className=\"App\">\n      <h1>Dream Themes</h1>\n      {rgbValues && hexCodes && (\n        <CardController\n          style={{}}\n          rgb={rgbValues}\n          hexCodes={hexCodes}\n          lockCard={lockCard}\n          colorInputs={colorInputs}\n        />\n      )}\n      {rgbValues && hexCodes && (\n        <RandomizerButton\n          randomizePalette={randomizePalette}\n          randomizeWithInput={getColorsWithInput}\n        />\n      )}\n      {rgbValues && hexCodes && (\n        <AddMyOwnColors handleColorInputs={handleColorInputs} />\n      )}\n    </main>\n  );\n};\n\nexport default App;\n","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/apiCalls.js",[],"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/ColorCard/index.js",["40","41"],"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/CardController/index.js",["42"],"import React, { useState } from \"react\";\nimport ColorCard from \"../ColorCard/index.js\";\nimport \"./CardController.scss\";\n\nconst CardController = ({ rgb, hexCodes, lockCard, colorInputs }) => {\n  return (\n    <section className=\"card-controller-wrapper\">\n      <ColorCard\n        color={rgb[0]}\n        hexCode={hexCodes[0]}\n        lockCard={lockCard}\n        colorInputs={colorInputs}\n      />\n      <ColorCard\n        color={rgb[1]}\n        hexCode={hexCodes[1]}\n        lockCard={lockCard}\n        colorInputs={colorInputs}\n      />\n      <ColorCard\n        color={rgb[2]}\n        hexCode={hexCodes[2]}\n        lockCard={lockCard}\n        colorInputs={colorInputs}\n      />\n      <ColorCard\n        color={rgb[3]}\n        hexCode={hexCodes[3]}\n        lockCard={lockCard}\n        colorInputs={colorInputs}\n      />\n      <ColorCard\n        color={rgb[4]}\n        hexCode={hexCodes[4]}\n        lockCard={lockCard}\n        colorInputs={colorInputs}\n      />\n    </section>\n  );\n};\n\nexport default CardController;\n","/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/RandomizerButton/index.js",[],"/Users/cooperterrones/turing/module3/projects/final-project/color-palate/src/Components/AddMyOwnMyColors/index.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":5,"column":10,"nodeType":"49","messageId":"50","endLine":5,"endColumn":15},{"ruleId":"47","severity":1,"message":"51","line":13,"column":10,"nodeType":"49","messageId":"50","endLine":13,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":39,"column":23,"nodeType":"54","messageId":"55","endLine":39,"endColumn":25},{"ruleId":"47","severity":1,"message":"56","line":61,"column":9,"nodeType":"49","messageId":"50","endLine":61,"endColumn":34},{"ruleId":"57","severity":1,"message":"58","line":74,"column":32,"nodeType":"59","endLine":74,"endColumn":34,"suggestions":"60"},{"ruleId":"47","severity":1,"message":"61","line":5,"column":10,"nodeType":"49","messageId":"50","endLine":5,"endColumn":16},{"ruleId":"47","severity":1,"message":"62","line":5,"column":18,"nodeType":"49","messageId":"50","endLine":5,"endColumn":27},{"ruleId":"47","severity":1,"message":"63","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'randomizePaletteWithInput' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getColors'. Either include it or remove the dependency array.","ArrayExpression",["66"],"'rgbVal' is assigned a value but never used.","'setRgbVal' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [getColors]",{"range":"69","text":"70"},[2158,2160],"[getColors]"]